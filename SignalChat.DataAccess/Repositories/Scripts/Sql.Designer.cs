//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SignalChat.DataAccess.Repositories.Scripts {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Sql {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Sql() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SignalChat.DataAccess.Repositories.Scripts.Sql", typeof(Sql).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into chats (name, creator_id)
        ///values (@Name, @CreatorId)
        ///returning id;.
        /// </summary>
        internal static string CreateChat {
            get {
                return ResourceManager.GetString("CreateChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into chat_participants (creator_id, chat_id, role)
        ///values (@CreatorId, @ChatId, @Role);.
        /// </summary>
        internal static string CreateChatParticipant {
            get {
                return ResourceManager.GetString("CreateChatParticipant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into users (username, email, name, surname, password_hash, refresh_token, refresh_token_expired_after)
        ///values (@Username, @Email, @Name, @Surname, @PasswordHash, @RefreshToken, @RefreshTokenExpiredAfter)
        ///returning id;.
        /// </summary>
        internal static string CreateUser {
            get {
                return ResourceManager.GetString("CreateUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на delete
        ///from users
        ///where id = @id;.
        /// </summary>
        internal static string DeleteUser {
            get {
                return ResourceManager.GetString("DeleteUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id                          as Id,
        ///       username                    as Username,
        ///       email                       as Email,
        ///       name                        as Name,
        ///       surname                     as Surname,
        ///       password_hash               as PasswordHash,
        ///       refresh_token               as RefreshToken,
        ///       refresh_token_expired_after as RefreshTokenExpiredAfter
        ///from users
        ///where email = @email
        ///  and password_hash = @passwordHash;.
        /// </summary>
        internal static string GetUserByEmailAndPassword {
            get {
                return ResourceManager.GetString("GetUserByEmailAndPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id                          as Id,
        ///       username                    as Username,
        ///       email                       as Email,
        ///       name                        as Name,
        ///       surname                     as Surname,
        ///       password_hash               as PasswordHash,
        ///       refresh_token               as RefreshToken,
        ///       refresh_token_expired_after as RefreshTokenExpiredAfter
        ///from users
        ///where id = @id;.
        /// </summary>
        internal static string GetUserById {
            get {
                return ResourceManager.GetString("GetUserById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id                          as Id,
        ///       username                    as Username,
        ///       email                       as Email,
        ///       name                        as Name,
        ///       surname                     as Surname,
        ///       password_hash               as PasswordHash,
        ///       refresh_token               as RefreshToken,
        ///       refresh_token_expired_after as RefreshTokenExpiredAfter
        ///from users
        ///where refresh_token = @refreshToken;.
        /// </summary>
        internal static string GetUserByRefreshToken {
            get {
                return ResourceManager.GetString("GetUserByRefreshToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id                          as Id,
        ///       username                    as Username,
        ///       email                       as Email,
        ///       name                        as Name,
        ///       surname                     as Surname,
        ///       password_hash               as PasswordHash,
        ///       refresh_token               as RefreshToken,
        ///       refresh_token_expired_after as RefreshTokenExpiredAfter
        ///from users;.
        /// </summary>
        internal static string GetUsers {
            get {
                return ResourceManager.GetString("GetUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from users
        ///              where email = @email);.
        /// </summary>
        internal static string IsUserExistsByEmail {
            get {
                return ResourceManager.GetString("IsUserExistsByEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from users
        ///              where id = @id);.
        /// </summary>
        internal static string IsUserExistsById {
            get {
                return ResourceManager.GetString("IsUserExistsById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select exists(select id
        ///              from users
        ///              where username = @username);.
        /// </summary>
        internal static string IsUserExistsByUsername {
            get {
                return ResourceManager.GetString("IsUserExistsByUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update users
        ///set refresh_token               = @refreshToken,
        ///    refresh_token_expired_after = @refreshTokenExpiredAfter
        ///where id = @Id;.
        /// </summary>
        internal static string UpdateRefreshToken {
            get {
                return ResourceManager.GetString("UpdateRefreshToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update users
        ///set
        ///    username = case when @Username is null then name else @Username end,
        ///    email = case when @Email is null then email else @Email end,
        ///    name = case when @Name is null then name else @Name end,
        ///    surname = case when @Surname is null then surname else @Surname end
        ///where id = @Id;.
        /// </summary>
        internal static string UpdateUser {
            get {
                return ResourceManager.GetString("UpdateUser", resourceCulture);
            }
        }
    }
}
